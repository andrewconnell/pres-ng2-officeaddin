{"version":3,"sources":["controllers/apiController.ts"],"names":["ApiController","ApiController.constructor","ApiController.loadRoutes","ApiController._queryCustomers","ApiController._queryCustomerByName","ApiController._queryCustomerById"],"mappings":"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","file":"controllers/apiController.js","sourceRoot":"/Users/ac/repos/pres-o365-node/officeaddin-outlook/","sourcesContent":["/// <reference path=\"../../../tools/typings/tsd.d.ts\" />\n/// <reference path=\"../../../tools/typings/server.d.ts\" />\n\nimport express = require('express');\nimport request = require('request');\n\nclass ApiController {\n  constructor(private app:express.Application) {\n    this.loadRoutes();\n  }\n\n  /**\n   * Setup routing for controller.\n   */\n  public loadRoutes() {\n    // get all customers\n    this.app.get('/api/customers', this._queryCustomers);\n    // filter customers\n    this.app.get('/api/customers/lookupByName/:customerNames', this._queryCustomerByName);\n    this.app.get('/api/customers/lookupById/:customerId', this._queryCustomerById);\n  }\n\n  /* ======================================================================= */\n\n  private _queryCustomers(expRequest:express.Request, expResponse:express.Response) {\n    // build query\n    var endpoint = 'http://services.odata.org/V3/Northwind/Northwind.svc/Customers?';\n\n    var options:request.Options = {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json;odata=verbose'\n      }\n    };\n\n    // execute query\n    console.log('executing query: ' + endpoint);\n    request(endpoint, options, (error, response, body) => {\n      console.log('query response', body);\n      expResponse.send(body);\n    });\n  }\n\n  private _queryCustomerByName(expRequest:express.Request, expResponse:express.Response) {\n    // get query params\n    var customerNames:string[] = expRequest.params.customerNames.split(',');\n\n    // build filter\n    var filter:string = '';\n    customerNames.forEach((customerName, index) => {\n      // add 'or' prefix if this isn't the first one\n      if (index > 0) {\n        filter += ' or ';\n      }\n      filter += 'endswith(ContactName,\\'' + customerName + '\\')';\n    });\n\n    // build query\n    var endpoint = 'http://services.odata.org/V3/Northwind/Northwind.svc/Customers?'\n      + '$select=CustomerID,ContactName,ContactTitle'\n      + '&$filter=' + filter;\n\n    var options:request.Options = {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json;odata=verbose'\n      }\n    };\n\n    // execute query\n    console.log('executing query: ' + endpoint);\n    request(endpoint, options, (error, response, body) => {\n      console.log('query response', body);\n      expResponse.send(body);\n    });\n  }\n\n  private _queryCustomerById(expRequest:express.Request, expResponse:express.Response) {\n    // get query param\n    var customerId = expRequest.params.customerId;\n\n    // build query\n    var endpoint = 'http://services.odata.org/V3/Northwind/Northwind.svc/Customers?'\n      + '$filter=CustomerID eq \\'' + customerId + '\\'';\n\n    var options:request.Options = {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json;odata=verbose'\n      }\n    };\n\n    // execute query\n    console.log('executing query: ' + endpoint);\n    request(endpoint, options, (error, response, body) => {\n      console.log('query response', body);\n      expResponse.send(body);\n    });\n  }\n}\n\nexport = ApiController;"]}