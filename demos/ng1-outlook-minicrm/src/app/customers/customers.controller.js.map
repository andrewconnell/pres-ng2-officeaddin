{"version":3,"sources":["customers/customers.controller.ts"],"names":["outlookApp","outlookApp.customers","outlookApp.customers.CustomersController","outlookApp.customers.CustomersController.constructor","outlookApp.customers.CustomersController.loadMatchesFromEmail","outlookApp.customers.CustomersController.getCadidateCustomersFromService","outlookApp.customers.CustomersController.goToCustomer"],"mappings":"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","file":"customers/customers.controller.js","sourceRoot":"/Users/ac/repos/pres-o365-node/officeaddin-outlook/","sourcesContent":["/// <reference path=\"../../../tools/typings/tsd.d.ts\" />\n/// <reference path=\"../../../tools/typings/app.d.ts\" />\n\nmodule outlookApp.customers {\n\n  export class CustomersController {\n\n    lookupCandidates:string[] = [];\n    matchCandidates:outlookApp.customers.ICustomer[] = [];\n\n\n    static $inject = ['$q', '$location', 'outlookApp.services.officeService', 'outlookApp.services.customerService'];\n\n    constructor(private $q:ng.IQService,\n                private $location:ng.ILocationService,\n                private officeService:outlookApp.services.OfficeService,\n                private customerService:outlookApp.services.CustomerService) {\n\n      this.loadMatchesFromEmail()\n        .then(() => {\n          return this.getCadidateCustomersFromService();\n        });\n    }\n\n    /**\n     * Load the possible candidate matches in the email within the app.\n     * @returns {Promise<T>|IPromise<T>}\n     */\n    loadMatchesFromEmail() {\n      var deferred = this.$q.defer();\n\n      this.officeService.getWordCandidatesFromEmail()\n        .then((candidates:any) => {\n          this.lookupCandidates = candidates;\n          deferred.resolve();\n        })\n        .catch((error:any) => {\n          deferred.reject(error);\n        });\n\n      return deferred.promise;\n    }\n\n    /**\n     * Query the lookup service to get a list of all matching candidates.\n     *\n     * @returns {Promise<T>|IPromise<T>}\n     */\n    getCadidateCustomersFromService() {\n      var deferred = this.$q.defer();\n\n      this.customerService.lookupCustomerPartials(this.lookupCandidates)\n        .then((candidates:any) => {\n          this.matchCandidates = candidates;\n          deferred.resolve();\n        })\n        .catch((error:any) => {\n          console.log('>>> failed getCadidateCustomersFromService', error);\n          deferred.reject(error);\n        });\n\n      return deferred.promise;\n    }\n\n    /**\n     * Changes the view to the the customer detail page.\n     *\n     * @param customer {object}   Customer selected from the list.\n     */\n    goToCustomer(customer) {\n      this.$location.path('/' + customer.CustomerID);\n    }\n\n  }\n\n  angular.module('outlookApp').controller('outlookApp.customers.customersController', CustomersController);\n}"]}