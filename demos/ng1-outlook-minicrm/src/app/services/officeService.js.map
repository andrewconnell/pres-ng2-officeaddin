{"version":3,"sources":["services/officeService.ts"],"names":["outlookApp","outlookApp.services","outlookApp.services.OfficeService","outlookApp.services.OfficeService.constructor","outlookApp.services.OfficeService.getWordCandidatesFromEmail"],"mappings":"AAAA,wDAAwD;AACxD,wDAAwD;AACxD,2DAA2D;AAE3D,IAAO,UAAU,CAmChB;AAnCD,WAAO,UAAU;IAACA,IAAAA,QAAQA,CAmCzBA;IAnCiBA,WAAAA,QAAQA,EAACA,CAACA;QAE1BC,IAAaA,aAAaA;YAGxBC;;;;eAIGA;YACHA,SARWA,aAAaA,CAQJA,EAAeA;gBAAfC,OAAEA,GAAFA,EAAEA,CAAaA;YAAGA,CAACA;YAEvCD;;;;eAIGA;YACHA,kDAA0BA,GAA1BA;gBACEE,IAAIA,QAAQA,GAAGA,IAAIA,CAACA,EAAEA,CAACA,KAAKA,EAAEA,CAACA;gBAE/BA,IAAAA,CAACA;oBACCA,IAAIA,YAAYA,GAAGA,MAAMA,CAACA,IAAIA,CAACA,IAAIA,CAACA,UAAUA,CAACA,MAAMA,CAACA,OAAOA,CAACA,OAAOA,CAACA,IAAIA,CAACA,CAACA;oBAE5EA,AAEAA,sEAFsEA;oBACtEA,0CAA0CA;oBAC1CA,QAAQA,CAACA,OAAOA,CAACA,YAAYA,CAACA,eAAeA,EAAEA,CAACA,YAAYA,CAACA,CAACA;gBAChEA,CAAEA;gBAAAA,KAAKA,CAACA,CAACA,KAAKA,CAACA,CAACA,CAACA;oBACfA,QAAQA,CAACA,MAAMA,CAACA,KAAKA,CAACA,CAACA;gBACzBA,CAACA;gBAEDA,MAAMA,CAACA,QAAQA,CAACA,OAAOA,CAACA;YAC1BA,CAACA;YA5BMF,qBAAOA,GAAGA,CAACA,IAAIA,CAACA,CAACA;YA6B1BA,oBAACA;QAADA,CA9BAD,AA8BCC,IAAAD;QA9BYA,sBAAaA,GAAbA,aA8BZA,CAAAA;QAEDA,OAAOA,CAACA,MAAMA,CAACA,YAAYA,CAACA,CAACA,OAAOA,CAACA,mCAAmCA,EAAEA,aAAaA,CAACA,CAACA;IAC3FA,CAACA,EAnCiBD,QAAQA,GAARA,mBAAQA,KAARA,mBAAQA,QAmCzBA;AAADA,CAACA,EAnCM,UAAU,KAAV,UAAU,QAmChB","file":"services/officeService.js","sourceRoot":"/Users/ac/repos/pres-o365-node/officeaddin-outlook/","sourcesContent":["/// <reference path=\"../../../tools/typings/tsd.d.ts\" />\n/// <reference path=\"../../../tools/typings/app.d.ts\" />\n/// <reference path=\"../../../tools/typings/custom.d.ts\" />\n\nmodule outlookApp.services {\n\n  export class OfficeService {\n    static $inject = ['$q'];\n\n    /**\n     * Custom Angular service that works with the host Office client.\n     *\n     * @param $q                Angular's $q promise service.\n     */\n    constructor(private $q:ng.IQService) {}\n\n    /**\n     * Retrieves a collection of all possible names in the currently selected email.\n     *\n     * @returns {Array<string>}   Collection of potential names.\n     */\n    getWordCandidatesFromEmail() {\n      var deferred = this.$q.defer();\n\n      try {\n        var currentEmail = Office.cast.item.toItemRead(Office.context.mailbox.item);\n\n        // get list of all words in email that start with an upper case letter\n        //  these are potential names of employees\n        deferred.resolve(currentEmail.getRegExMatches().PossibleName);\n      } catch (error) {\n        deferred.reject(error);\n      }\n\n      return deferred.promise;\n    }\n  }\n\n  angular.module('outlookApp').service('outlookApp.services.officeService', OfficeService);\n}"]}