{"version":3,"sources":["services/customerService.ts"],"names":["outlookApp","outlookApp.services","outlookApp.services.CustomerService","outlookApp.services.CustomerService.constructor","outlookApp.services.CustomerService.lookupCustomerPartials","outlookApp.services.CustomerService.lookupCustomer"],"mappings":"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","file":"services/customerService.js","sourceRoot":"/Users/ac/repos/pres-o365-node/officeaddin-outlook/","sourcesContent":["/// <reference path=\"../../../tools/typings/tsd.d.ts\" />\n/// <reference path=\"../../../tools/typings/app.d.ts\" />\n\nmodule outlookApp.services {\n\n  export class CustomerService {\n    static $inject = ['$q', '$http'];\n\n    /**\n     * Custom Angular service that talks to a static JSON file simulating a REST API.\n     *\n     * @param $q                Angular's $q promise service.\n     * @param $http             Angular's $http service.\n     */\n    constructor(private $q:ng.IQService,\n                private $http:ng.IHttpService) {\n    }\n\n    /**\n     * Queries the remote service for possible customer matches.\n     *\n     * @param possibleCustomers {Array<string>}   Collection of customer last names to lookup.\n     */\n    lookupCustomerPartials(possibleCustomers:string[]) {\n      var deferred = this.$q.defer();\n\n      // if nothing submitted return empty collection\n      if (!possibleCustomers || possibleCustomers.length === 0) {\n        deferred.resolve([]);\n      }\n\n      // build filter\n      var filter:string = '';\n      possibleCustomers.forEach((possibleHit:string, index) => {\n        if (index !== 0) {\n          filter += ',';\n        }\n        filter += possibleHit;\n      });\n\n      // fetch data\n      var endpoint = '/api/customers/lookupbyname/' + filter;\n\n      // execute query\n      this.$http({\n        method: 'GET',\n        url: endpoint\n      }).success((response:outlookApp.customers.INorthwindCustomersOdataResponse) => {\n        deferred.resolve(response.d.results);\n      }).error((error:any) => {\n        deferred.reject(error);\n      });\n\n      return deferred.promise;\n    }\n\n    /**\n     * Finds a specific customer form the datasource.\n     *\n     * @param customerID  {number}    Unique ID of the customer.\n     */\n    lookupCustomer(customerID) {\n      var deferred = this.$q.defer();\n\n      // fetch data\n      var endpoint = '/api/customers/lookupById/' + customerID;\n\n      this.$http({\n        method: 'GET',\n        url: endpoint\n      }).success((response:outlookApp.customers.INorthwindCustomersOdataResponse) => {\n        deferred.resolve(response.d.results[0]);\n      }).error((error:any) => {\n        deferred.reject(error);\n      });\n\n      return deferred.promise;\n    }\n\n  }\n\n  angular.module('outlookApp').service('outlookApp.services.customerService', CustomerService);\n}"]}